// Mocks generated by Mockito 5.1.0 from annotations
// in my_note/test/data/datasources/remote_datasources_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_note/app/data/api/client.dart' as _i6;
import 'package:my_note/app/data/models/note_model.dart' as _i8;
import 'package:my_note/app/data/models/responses/add_new_note_response.dart'
    as _i4;
import 'package:my_note/app/data/models/responses/common_note_response.dart'
    as _i5;
import 'package:my_note/app/data/models/responses/get_all_notes_response.dart'
    as _i2;
import 'package:my_note/app/data/models/responses/get_note_by_id_response.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetAllNotesResponse_0 extends _i1.Fake
    implements _i2.GetAllNotesResponse {}

class _FakeGetNoteByIdResponse_1 extends _i1.Fake
    implements _i3.GetNoteByIdResponse {}

class _FakeAddNewNoteResponse_2 extends _i1.Fake
    implements _i4.AddNewNoteResponse {}

class _FakeCommonNoteResponse_3 extends _i1.Fake
    implements _i5.CommonNoteResponse {}

/// A class which mocks [APIClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIClient extends _i1.Mock implements _i6.APIClient {
  MockAPIClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.GetAllNotesResponse> getAllNotes() =>
      (super.noSuchMethod(Invocation.method(#getAllNotes, []),
              returnValue: Future<_i2.GetAllNotesResponse>.value(
                  _FakeGetAllNotesResponse_0()))
          as _i7.Future<_i2.GetAllNotesResponse>);
  @override
  _i7.Future<_i3.GetNoteByIdResponse> getNoteById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getNoteById, [id]),
              returnValue: Future<_i3.GetNoteByIdResponse>.value(
                  _FakeGetNoteByIdResponse_1()))
          as _i7.Future<_i3.GetNoteByIdResponse>);
  @override
  _i7.Future<_i4.AddNewNoteResponse> addNewNote(_i8.Note? note) =>
      (super.noSuchMethod(Invocation.method(#addNewNote, [note]),
              returnValue: Future<_i4.AddNewNoteResponse>.value(
                  _FakeAddNewNoteResponse_2()))
          as _i7.Future<_i4.AddNewNoteResponse>);
  @override
  _i7.Future<_i5.CommonNoteResponse> editNote(String? id, _i8.Note? note) =>
      (super.noSuchMethod(Invocation.method(#editNote, [id, note]),
              returnValue: Future<_i5.CommonNoteResponse>.value(
                  _FakeCommonNoteResponse_3()))
          as _i7.Future<_i5.CommonNoteResponse>);
  @override
  _i7.Future<_i5.CommonNoteResponse> deleteNote(String? id) =>
      (super.noSuchMethod(Invocation.method(#deleteNote, [id]),
              returnValue: Future<_i5.CommonNoteResponse>.value(
                  _FakeCommonNoteResponse_3()))
          as _i7.Future<_i5.CommonNoteResponse>);
}
